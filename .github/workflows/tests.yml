name: Tests
on:
  - push
  - pull_request
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1

    steps:
      - uses: actions/checkout@v2.4.0
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}cargo-registry-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.os }}cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}cargo-index-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.os }}cargo-index-

      - name: Cache core cargo target
        uses: actions/cache@v2.1.7
        with:
          path: target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.os }}cargo-core-${{ hashFiles('core/**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.os }}cargo-core-${{ hashFiles('core/**/Cargo.toml') }}
            ${{ matrix.os }}cargo-core-

      - name: Clippy & Tests
        run: |
          cargo clippy --release -- -D clippy::all && cargo test --release
